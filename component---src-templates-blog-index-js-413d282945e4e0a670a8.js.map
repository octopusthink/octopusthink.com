{"version":3,"sources":["webpack:///./src/templates/Blog/index.js","webpack:///./node_modules/gatsby/node_modules/core-js/modules/es6.array.fill.js"],"names":["BlogList","props","data","pageContext","posts","numberOfPages","currentPage","pageTitle","config","blogTitle","pageSummary","blogSummary","description","blogDescription","pageSlug","blogUrl","title","pathname","summary","columnsTablet","gap","edges","map","node","fields","readingTime","timeToRead","date","slug","thumbnail","key","image","Array","fill","item","i","index","link","Item","to","light","pageQuery","$export","P"],"mappings":"gVAaaA,EAAW,SAACC,GAAW,IAC1BC,EAAsBD,EAAtBC,KAAMC,EAAgBF,EAAhBE,YACNC,EAAUF,EAAVE,MACAC,EAA+BF,EAA/BE,cAAeC,EAAgBH,EAAhBG,YACjBC,EAAYC,IAAOC,UACnBC,EAAcF,IAAOG,YACrBC,EAAcJ,IAAOK,gBACrBC,EAAWN,IAAOO,QAExB,OACE,cAAC,IAAD,KACE,cAAC,IAAD,CAAKC,MAAOT,EAAWK,YAAaA,EAAaK,SAAUH,IAC3D,cAAC,IAAD,KACE,cAAC,IAAD,CAAYI,QAASR,EAAaM,MAAOT,IACzC,cAAC,IAAD,CAAYY,cAAc,IAAIC,IAAI,OAC/BhB,EAAMiB,MAAMC,KAAI,YAAe,IAAZC,EAAW,EAAXA,KACVC,EAAoCD,EAApCC,OAAoBC,EAAgBF,EAA5BG,WACRC,EAA0CH,EAA1CG,KAAMC,EAAoCJ,EAApCI,KAAMV,EAA8BM,EAA9BN,QAASF,EAAqBQ,EAArBR,MAAOa,EAAcL,EAAdK,UACpC,OACE,cAAC,WAAD,CAAUC,IAAKF,GACb,cAAC,IAAD,CACED,KAAMA,EACNF,YAAaA,EACbG,KAAMA,EACNV,QAASA,EACTF,MAAOA,EACPe,MAAK,UAAYF,QAMxBxB,EAAgB,GACf,cAAC,OAAD,KACG2B,MAAM3B,GACJ4B,KAAK,MACLX,KAAI,SAACY,EAAMC,GACV,IAAMC,EAAQD,EAAI,EACZE,EAAiB,IAAVD,EAAc,QAAd,cAAsCA,EAEnD,OACE,cAAC,OAAKE,KAAN,CAAWR,IAAKO,GACb/B,IAAgB8B,EACf,0BAAOA,GAEP,cAAC,OAAD,CAAMG,GAAIF,GAAOD,SAQjC,cAAC,IAAD,CAASI,OAAK,OAMTC,EAAS,aA+BPzC,a,qBCtGf,IAAI0C,EAAU,EAAQ,QAEtBA,EAAQA,EAAQC,EAAG,QAAS,CAAEV,KAAM,EAAQ,UAE5C,EAAQ,OAAR,CAAiC","file":"component---src-templates-blog-index-js-413d282945e4e0a670a8.js","sourcesContent":["import { Link, List } from '@octopusthink/nautilus';\nimport { graphql } from 'gatsby';\nimport React, { Fragment } from 'react';\n\nimport Divider from 'components/Divider';\nimport PageHeader from 'components/PageHeader';\nimport PageWrapper from 'components/PageWrapper';\nimport PostCard from 'components/PostCard';\nimport SEO from 'components/SEO';\nimport config from 'data/SiteConfig';\nimport App from 'templates/App';\nimport GridLayout from 'components/GridLayout';\n\nexport const BlogList = (props) => {\n  const { data, pageContext } = props;\n  const { posts } = data;\n  const { numberOfPages, currentPage } = pageContext;\n  const pageTitle = config.blogTitle;\n  const pageSummary = config.blogSummary;\n  const description = config.blogDescription;\n  const pageSlug = config.blogUrl;\n\n  return (\n    <App>\n      <SEO title={pageTitle} description={description} pathname={pageSlug} />\n      <PageWrapper>\n        <PageHeader summary={pageSummary} title={pageTitle} />\n        <GridLayout columnsTablet=\"2\" gap=\"8.0\">\n          {posts.edges.map(({ node }) => {\n            const { fields, timeToRead: readingTime } = node;\n            const { date, slug, summary, title, thumbnail } = fields;\n            return (\n              <Fragment key={slug}>\n                <PostCard\n                  date={date}\n                  readingTime={readingTime}\n                  slug={slug}\n                  summary={summary}\n                  title={title}\n                  image={`/images${thumbnail}`}\n                />\n              </Fragment>\n            );\n          })}\n\n          {numberOfPages > 1 && (\n            <List>\n              {Array(numberOfPages)\n                .fill(null)\n                .map((item, i) => {\n                  const index = i + 1;\n                  const link = index === 1 ? '/blog' : `/blog/page=${index}`;\n\n                  return (\n                    <List.Item key={link}>\n                      {currentPage === index ? (\n                        <span>{index}</span>\n                      ) : (\n                        <Link to={link}>{index}</Link>\n                      )}\n                    </List.Item>\n                  );\n                })}\n            </List>\n          )}\n        </GridLayout>\n        <Divider light />\n      </PageWrapper>\n    </App>\n  );\n};\n\nexport const pageQuery = graphql`\n  query blogPostsList($skip: Int!, $limit: Int!, $nowTimestamp: Int!) {\n    posts: allMdx(\n      sort: { fields: [fields___date], order: DESC }\n      filter: {\n        fileAbsolutePath: { regex: \"//content/blog/\" }\n        fields: { timestamp: { lte: $nowTimestamp } }\n      }\n      limit: $limit\n      skip: $skip\n    ) {\n      edges {\n        node {\n          fields {\n            date\n            slug\n            summary\n            title\n            tags {\n              name\n              summary\n            }\n            thumbnail\n          }\n          timeToRead\n        }\n      }\n    }\n  }\n`;\n\nexport default BlogList;\n","// 22.1.3.6 Array.prototype.fill(value, start = 0, end = this.length)\nvar $export = require('./_export');\n\n$export($export.P, 'Array', { fill: require('./_array-fill') });\n\nrequire('./_add-to-unscopables')('fill');\n"],"sourceRoot":""}